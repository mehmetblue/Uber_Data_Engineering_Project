{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "connections_gmail_name": {
            "defaultValue": "gmail",
            "type": "String"
        },
        "workflows_UberEmailNotification_name": {
            "defaultValue": "UberEmailNotification",
            "type": "String"
        },
        "servers_sqlserveruberrideanalytics_name": {
            "defaultValue": "sqlserveruberrideanalytics",
            "type": "String"
        },
        "storageAccounts_adlsg2uberrideanalytics_name": {
            "defaultValue": "adlsg2uberrideanalytics",
            "type": "String"
        },
        "workspaces_uberrideanalytics_databricks_name": {
            "defaultValue": "uberrideanalytics_databricks",
            "type": "String"
        },
        "systemTopics_adlsg2uberrideanalytics_xxxxxxxx_xxxx_xxxx_xxxx_xxxxxxxxxxx_name": {
            "defaultValue": "adlsg2uberrideanalytics-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Databricks/workspaces",
            "apiVersion": "2024-05-01",
            "name": "[parameters('workspaces_uberrideanalytics_databricks_name')]",
            "location": "westus3",
            "sku": {
                "name": "premium"
            },
            "properties": {
                "defaultCatalog": {
                    "initialType": "UnityCatalog"
                },
                "managedResourceGroupId": "[concat('/subscriptions/YOUR_SUBSCRIPTION_ID/resourceGroups/databricks-rg-', parameters('workspaces_uberrideanalytics_databricks_name'), '-xxxxxxxxxxxxx')]",
                "parameters": {
                    "enableNoPublicIp": {
                        "value": true
                    },
                    "natGatewayName": {
                        "value": "nat-gateway"
                    },
                    "prepareEncryption": {
                        "value": false
                    },
                    "publicIpName": {
                        "value": "nat-gw-public-ip"
                    },
                    "requireInfrastructureEncryption": {
                        "value": false
                    },
                    "storageAccountName": {
                        "value": "dbstoragexxxxxxxxxxxxx"
                    },
                    "storageAccountSkuName": {
                        "value": "Standard_GRS"
                    },
                    "vnetAddressPrefix": {
                        "value": "10.139"
                    }
                },
                "authorizations": [
                    {
                        "principalId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                        "roleDefinitionId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    }
                ],
                "createdBy": {},
                "updatedBy": {}
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2023-08-01-preview",
            "name": "[parameters('servers_sqlserveruberrideanalytics_name')]",
            "location": "swedencentral",
            "kind": "v12.0",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "administratorLogin": "adminname",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "administrators": {
                    "administratorType": "ActiveDirectory",
                    "principalType": "User",
                    "login": "adminLoginEmail",
                    "sid": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "tenantId": "xxxxxxxx-xxxx-xxxx-xxxxxxxx-xxxxxxxxxxxx",
                    "azureADOnlyAuthentication": false
                },
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-05-01",
            "name": "[parameters('storageAccounts_adlsg2uberrideanalytics_name')]",
            "location": "swedencentral",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": true,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "isSftpEnabled": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "largeFileSharesState": "Enabled",
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_gmail_name')]",
            "location": "swedencentral",
            "kind": "V1",
            "properties": {
                "displayName": "[concat('yourmailadres@', parameters('connections_gmail_name'), '.com')]",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2024-07-03T14:26:35.4825231Z",
                "changedTime": "2024-07-03T22:14:38.2768417Z",
                "api": {
                    "name": "[parameters('connections_gmail_name')]",
                    "displayName": "Gmail",
                    "description": "Gmail is a web-based email service from Google. With the Gmail connector, you can perform actions such as send or receive e-mail messages, and trigger flows on new e-mails.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1694/1.0.1694.3752/', parameters('connections_gmail_name'), '/icon.png')]",
                    "brandColor": "#20427f",
                    "id": "[concat('/subscriptions/YOUR_SUBSCRIPTION_ID/providers/Microsoft.Web/locations/swedencentral/managedApis/', parameters('connections_gmail_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/YOUR_SUBSCRIPTION_ID/resourceGroups/RG_UberRideAnalytics/providers/Microsoft.Web/connections/', parameters('connections_gmail_name'), '/extensions/proxy/TestConnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics",
            "apiVersion": "2024-06-01-preview",
            "name": "[parameters('systemTopics_adlsg2uberrideanalytics_xxxxxxxx_xxxx_xxxx_xxxx_xxxxxxxxxxxx_name')]",
            "location": "swedencentral",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_adlsg2uberrideanalytics_name'))]"
            ],
            "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_adlsg2uberrideanalytics_name'))]",
                "topicType": "microsoft.storage.storageaccounts"
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "apiVersion": "2024-06-01-preview",
            "name": "[concat(parameters('systemTopics_adlsg2uberrideanalytics_xxxxxxxx_xxxx_xxxx_xxxx_xxxxxxxxxxxx_name'), '/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', parameters('systemTopics_adlsg2uberrideanalytics_xxxxxxxx_xxxx_xxxx_xxxx_xxxxxxxxxxxx_name'))]"
            ],
            "properties": {
                "destination": {
                    "properties": {
                        "maxEventsPerBatch": 1,
                        "preferredBatchSizeInKilobytes": 64
                    },
                    "endpointType": "WebHook"
                },
                "filter": {
                    "subjectBeginsWith": "/blobServices/default/containers/data/blobs/Trip_Transaction",
                    "subjectEndsWith": ".csv",
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated"
                    ],
                    "advancedFilters": [
                        {
                            "values": [
                                "CopyBlob",
                                "PutBlob",
                                "PutBlockList",
                                "FlushWithClose",
                                "DeleteBlob",
                                "CreateFile",
                                "DeleteFile"
                            ],
                            "operatorType": "StringIn",
                            "key": "data.api"
                        },
                        {
                            "value": 0,
                            "operatorType": "NumberGreaterThan",
                            "key": "data.contentLength"
                        }
                    ]
                },
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 30,
                    "eventTimeToLiveInMinutes": 1440
                }
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "apiVersion": "2024-06-01-preview",
            "name": "[concat(parameters('systemTopics_adlsg2uberrideanalytics_xxxxxxxx_xxxx_xxxx_xxxx_xxxxxxxxxxxx_name'), '/32906cb2-f34a-290e-8886-5f75698aa7a1')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', parameters('systemTopics_adlsg2uberrideanalytics_xxxxxxxx_xxxx_xxxx_xxxx_xxxxxxxxxxxx_name'))]"
            ],
            "properties": {
                "destination": {
                    "properties": {
                        "maxEventsPerBatch": 1,
                        "preferredBatchSizeInKilobytes": 64
                    },
                    "endpointType": "WebHook"
                },
                "filter": {
                    "subjectBeginsWith": "/blobServices/default/containers/data/blobs/Ride_Rating",
                    "subjectEndsWith": ".csv",
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated"
                    ],
                    "advancedFilters": [
                        {
                            "values": [
                                "CopyBlob",
                                "PutBlob",
                                "PutBlockList",
                                "FlushWithClose",
                                "DeleteBlob",
                                "CreateFile",
                                "DeleteFile"
                            ],
                            "operatorType": "StringIn",
                            "key": "data.api"
                        },
                        {
                            "value": 0,
                            "operatorType": "NumberGreaterThan",
                            "key": "data.contentLength"
                        }
                    ]
                },
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 30,
                    "eventTimeToLiveInMinutes": 1440
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_UberEmailNotification_name')]",
            "location": "swedencentral",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_gmail_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_HTTP_request_is_received": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "Pipeline": {
                                            "type": "string"
                                        },
                                        "Success/Failure": {
                                            "type": "string"
                                        },
                                        "DatafactoryName": {
                                            "type": "string"
                                        },
                                        "PipelinerunId": {
                                            "type": "string"
                                        },
                                        "Time": {
                                            "type": "string"
                                        },
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "Send_email_(V2)": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['gmail']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "To": "yourmailaddress",
                                    "Importance": "Normal",
                                    "Subject": "@{triggerBody()?['Success/Failure']} - @{triggerBody()?['Pipeline']}",
                                    "Body": "<p>@{triggerBody()?['Success/Failure']}</p><p>@{triggerBody()?['DatafactoryName']}</p><p>@{triggerBody()?['Pipeline']}</p><p>@{triggerBody()?['Time']}</p><p>@{triggerBody()?['Message']}</p><br><br>"
                                },
                                "path": "/v2/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "gmail": {
                                "id": "/subscriptions/YOUR_SUBSCRIPTION_ID/providers/Microsoft.Web/locations/swedencentral/managedApis/gmail",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_gmail_name'))]",
                                "connectionName": "gmail"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/administrators",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/ActiveDirectory')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "administratorType": "ActiveDirectory",
                "login": "LoginEmail",
                "sid": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "tenantId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/Default')]",
            "location": "Sweden Central",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            }
        },
        {
            "type": "Microsoft.Sql/servers/azureADOnlyAuthentications",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "azureADOnlyAuthentication": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/connectionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/default')]",
            "location": "swedencentral",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "connectionType": "Default"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics')]",
            "location": "swedencentral",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 1
            },
            "kind": "v12.0,user,vcore,serverless",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 34359738368,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "autoPauseDelay": 60,
                "requestedBackupStorageRedundancy": "Local",
                "minCapacity": 0.5,
                "maintenanceConfigurationId": "/subscriptions/YOUR_SUBSCRIPTION_ID/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
                "isLedgerOn": false,
                "availabilityZone": "NoPreference"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/master/Default')]",
            "location": "Sweden Central",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/devOpsAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged",
                "autoRotationEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/EveryOne')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
            }
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/sqlVulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_adlsg2uberrideanalytics_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_adlsg2uberrideanalytics_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_adlsg2uberrideanalytics_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_adlsg2uberrideanalytics_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_adlsg2uberrideanalytics_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_adlsg2uberrideanalytics_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_adlsg2uberrideanalytics_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_adlsg2uberrideanalytics_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/Default')]",
            "location": "Sweden Central",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "retentionDays": 7,
                "diffBackupIntervalInHours": 12
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_sqlserveruberrideanalytics_name'), '/sqldatabase_uberrideanalytics/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserveruberrideanalytics_name'), 'sqldatabase_uberrideanalytics')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserveruberrideanalytics_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_adlsg2uberrideanalytics_name'), '/default/bronze')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_adlsg2uberrideanalytics_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_adlsg2uberrideanalytics_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_adlsg2uberrideanalytics_name'), '/default/data')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_adlsg2uberrideanalytics_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_adlsg2uberrideanalytics_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_adlsg2uberrideanalytics_name'), '/default/errors')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_adlsg2uberrideanalytics_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_adlsg2uberrideanalytics_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_adlsg2uberrideanalytics_name'), '/default/gold')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_adlsg2uberrideanalytics_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_adlsg2uberrideanalytics_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_adlsg2uberrideanalytics_name'), '/default/silver')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_adlsg2uberrideanalytics_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_adlsg2uberrideanalytics_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        }
    ]
}